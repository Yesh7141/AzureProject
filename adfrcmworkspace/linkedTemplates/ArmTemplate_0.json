{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfrcmworkspace"
		},
		"ls_adlsgen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adlsgen2'"
		},
		"ls_azuresqldb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_azuresqldb'"
		},
		"ls_databricksdeltalake_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricksdeltalake'"
		},
		"ls_sqldbfiles_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sqldbfiles'"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://files.cdn.thinkific.com"
		},
		"ls_adlsgen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ttfstorage.dfs.core.windows.net/"
		},
		"ls_azuresqldb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ttrcmserver.database.windows.net"
		},
		"ls_azuresqldb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().db_name}"
		},
		"ls_azuresqldb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"ls_sqldbfiles_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ttrcmserver.database.windows.net"
		},
		"ls_sqldbfiles_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().database}"
		},
		"ls_sqldbfiles_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adlsgen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adlsgen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adlsgen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azuresqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"db_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_azuresqldb_properties_typeProperties_server')]",
					"database": "[parameters('ls_azuresqldb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azuresqldb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_azuresqldb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricksdeltalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-3130926475187914.14.azuredatabricks.net",
					"clusterId": "0317-062443-jre0tqs8",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricksdeltalake_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqldbfiles')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"database": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sqldbfiles_properties_typeProperties_server')]",
					"database": "[parameters('ls_sqldbfiles_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sqldbfiles_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sqldbfiles_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/deltalake_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_databricksdeltalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricksdeltalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azuresqldb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"db_name": {
							"value": "@dataset().db_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"db_name": {
						"type": "string"
					},
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldbfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldbfiles",
					"type": "LinkedServiceReference",
					"parameters": {
						"database": "trendytech-hospital-b"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqldbfiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/genric_adls_flat_file_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adlsgen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adlsgen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/genric_adls_parquet_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adlsgen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adlsgen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Main_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lkp_EMR_Configs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "genric_adls_flat_file_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": "configs",
									"file_path": "emr",
									"file_name": "load_config.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lkp_EMR_Configs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lkp_EMR_Configs').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "File_Exists",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "genric_adls_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "bronze",
													"type": "Expression"
												},
												"file_path": {
													"value": "@item().targetpath",
													"type": "Expression"
												},
												"file_name": {
													"value": "@split(item().tablename,'.')[1]",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "ParquetReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "File_Exists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('File_Exists').output.exists, true)\r\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Archive File",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "genric_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "genric_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@concat(item().targetpath, '/archive/', formatDateTime(utcNow(), 'yyyy'), '/', formatDateTime(utcNow(), '%M'), '/', formatDateTime(utcNow(), '%d'))",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().loadtype,'Full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Fetch_Logs",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_fetched_date from audit.load_logs where',' data_source=''',item().datasource,''' and tablename=''',item().tablename,'''')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "deltalake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											},
											{
												"name": "Incremental_Load",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Fetch_Logs",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ', item().tablename,' where ',item().watermark, ' >= ''',activity('Fetch_Logs').output.firstRow.last_fetched_date,'''')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_azuresqldb",
														"type": "DatasetReference",
														"parameters": {
															"db_name": {
																"value": "@item().database",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "genric_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert_Logs_Inc_load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Incremental_Load",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat(\n    'insert into audit.load_logs (data_source, tablename, numberofrowscopied, watermarkcolumnname, loaddate) values (''',\n    item().datasource, ''', ''',\n    item().tablename, ''', ',\n    activity('Incremental_Load').output.rowscopied, ', ''',\n    item().watermark, ''', ''',\n    formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss'), ''')'\n)\n",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "deltalake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Full_Load_CP",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ', item().tablename)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_azuresqldb",
														"type": "DatasetReference",
														"parameters": {
															"db_name": {
																"value": "@item().database",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "genric_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert_Logs_Full_Load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Full_Load_CP",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('insert into audit.load_logs(\n    data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',item().datasource,''',''',item().tablename,''',''',activity('Full_Load_CP').output.rowscopied,''',''',item().watermark,''',''',utcNow(),''')')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "deltalake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-17T16:36:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/genric_adls_flat_file_ds')]",
				"[concat(variables('factoryId'), '/datasets/genric_adls_parquet_ds')]",
				"[concat(variables('factoryId'), '/datasets/deltalake_ds')]",
				"[concat(variables('factoryId'), '/datasets/ds_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Main_pipeline_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lkp_EMR_Configs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "genric_adls_flat_file_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": "configs",
									"file_path": "emr",
									"file_name": "load_config.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lkp_EMR_Configs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lkp_EMR_Configs').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "File_Exists",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "genric_adls_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "bronze",
													"type": "Expression"
												},
												"file_path": {
													"value": "@item().targetpath",
													"type": "Expression"
												},
												"file_name": {
													"value": "@split(item().tablename,'.')[1]",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "ParquetReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "File_Exists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('File_Exists').output.exists, true)\r\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Archive File",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "genric_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "genric_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@concat(item().targetpath, '/archive/', formatDateTime(utcNow(), 'yyyy'), '/', formatDateTime(utcNow(), '%M'), '/', formatDateTime(utcNow(), '%d'))",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().loadtype,'Full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Fetch_Logs",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_fetched_date from audit.load_logs where',' data_source=''',item().datasource,''' and tablename=''',item().tablename,'''')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "deltalake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											},
											{
												"name": "Incremental_Load",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Fetch_Logs",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ', item().tablename,' where ',item().watermark, ' >= ''',activity('Fetch_Logs').output.firstRow.last_fetched_date,'''')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_azuresqldb",
														"type": "DatasetReference",
														"parameters": {
															"db_name": {
																"value": "@item().database",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "genric_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert_Logs_Inc_load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Incremental_Load",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat(\n    'insert into audit.load_logs (data_source, tablename, numberofrowscopied, watermarkcolumnname, loaddate) values (''',\n    item().datasource, ''', ''',\n    item().tablename, ''', ',\n    string(activity('Incremental_Load').output.rowscopied), ', ''',\n    item().watermark, ''', ''',\n    formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss'), ''')'\n)",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "deltalake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Full_Load_CP",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ', item().tablename)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_azuresqldb",
														"type": "DatasetReference",
														"parameters": {
															"db_name": {
																"value": "@item().database",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "genric_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert_Logs_Full_Load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Full_Load_CP",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat(\n    'insert into audit.load_logs (data_source, tablename, numberofrowscopied, watermarkcolumnname, loaddate) values (''',\n    item().datasource, ''', ''',\n    item().tablename, ''', ',\n    string(activity('Full_Load_CP').output.rowscopied), ', ''',\n    item().watermark, ''', ''',\n    formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss'), ''')'\n)\n",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "deltalake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-17T17:22:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/genric_adls_flat_file_ds')]",
				"[concat(variables('factoryId'), '/datasets/genric_adls_parquet_ds')]",
				"[concat(variables('factoryId'), '/datasets/deltalake_ds')]",
				"[concat(variables('factoryId'), '/datasets/ds_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File_to_table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "genric_adls_flat_file_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw",
									"file_path": "files",
									"file_name": "transactions.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldbfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-17T16:36:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/genric_adls_flat_file_ds')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldbfiles')]"
			]
		}
	]
}